项目介绍：为了支撑大网全国联网成功后，面向企业、个人用户销售和运营高精定位产品及服务，建立的一套运营商级的大网业务运营的https服务系统。项目分为用户中心、产品中心、合同订单中心、服务中心、客服中心、鉴权中心、报表中心、日志中心等模块。例如：
用户中心：采用springSecurity+JWT实现了用户的登录，并采用RBAC（基于角色的权限控制）权限模型进行了用户权限管理。将客户、客服和官方运维人员做了一个权限的划分。
产品中心：产品管理主要包括了用户对系统所提供的数据产品的查看，包括数据和服务产品列表、数据产品详情、产品覆盖范围等，而运维人员不仅可以查看还可以添加和修改服务产品及服务节点的配置信息等。
报表中心：报表中心主要提供了服务实例统计、License统计、故障单统计等图表统计。
服务中心：运维人员根据合同或试用说明的内容，选择产品，创建相应的服务实例，并设定服务实例的开始和结束时间；根据服务实例的开始时间和产品信息创建license，并设置license激活开始时间和产品信息，一个服务实例可对应多个license。
鉴权中心：终端SDK获取token的请求，SDK会携带由服务平台生成的Access Key和Secret，发起鉴权请求，请求首先会查询Redis缓存【License+区域格网+接入点】,命中缓存直接返回，未命中则请求数据库，鉴权成功则可以订阅对应的主题信息。其中License信息、区域格网信息、接入点信息、动态令牌会在缓存中保存5分钟以提高查询性能。

主要技术：spring boot、spring cloud、mysql、redis、Eureka、Swagger、fegin、 jenkins（思考组件是否有遗漏）
项目介绍：这个项目是中台结算项目，项目分为应收、应付、合同、核销、业务结算、会计引擎等模块。我主要负责会计引擎模块、合同模块和一些接口的开发。项目使用微服务架构， 整合了 Eureka、Swagger、fegin、spring boot、spring cloud框架，数据库使用 mysql，采用主从数据库读写分离模式减轻数据库压力。 并且结合 jenkins 采用持续部署、持续集成，极大的提升了开发和测试效率。
	



l掌握JAVA编程语言，具备良好的编码习惯。
l熟悉Spring、SpringMVC、Mybatis、Spring Security等主流开源框架。
l熟悉SpringBoot、SpringCloud等微服务框架。
l熟悉Mysql数据库，具有SQL优化，索引优化经验。
l熟悉非关系型数据库Redis，了解Redis集群与持久化。
l熟悉Git、Maven等项目管理及构建工具。
l熟练使用Linux常用命令。
l了解分布式事务，以及分布式事务的处理方案。
l了解Java虚拟机HotSpot。


//1.用过springSecurity,简单说一下springSecurity和JWT。  知道SSO吗？简单讲一下。
	5各handler，一个filter，两个User。	header、PayLoad、Signature。	单点登录业务系统是不管用户是否登录的，登录单独一个服务。登录到SSO，请求服务服务拿到token打到SSO验证。
	
//2.RABC是什么，这样做的好处是什么？缺点是什么？数据库对应怎么实现的？====》需解决
	基于角色的访问控制。
	http://www.woshipm.com/pd/5173846.html

//3.你们redis怎么用的？有做持久化使用吗？redis除了string还用过其他数据结构吗？ 
	redis主要做缓存使用。缓存穿透（没有）、缓存击穿（有失效）、缓存雪崩（大量同时失效）、布隆过滤器（底层和原理）。		还用过hash数据结构（key为用户id,value为hash。存储linceseCode、licenseSecret、sdk版本的散列表）。有时间5种类型的都要总结一下（待总结ok）。
	redis其他数据类型：List结构，适合微博、公众号等List结构的消息流；Set可以快速查找
	
//4.讲一下你们项目的技术架构。 ====》需解决
	springBoot+springSecurity+Mybatis+redis+mysql+kafka+minio+https
	
//5.mysql采用的什么模式？ mysql四种隔离级别？你们项目用的什么隔离级别？（======================》待总结）
	主从模式、读写分离。主从复制的原理？
	主从模式，读写分离：https://zhuanlan.zhihu.com/p/68035302
	
	读未提交 	==》	脏读、不可重复读、幻读；        脏读：一个事务读到了另一个未提交事务修改的数据。
	读已提交	==》	不可重复读、幻读；				不可重复读：一个事务只能读到另一个已提交的事务修改过的数据。
	可重复读	==》	幻读；							幻读：类似不可重复读，但是针对插入删除。
	串行化
	在可重复读隔离级别下，事务B只能在事务A修改过数据并提交后，自己也提交事务后，才能读取到事务B修改的数据。
	为什么上了写锁（写操作），别的事务还可以读操作？		==》  MVCC  多版本并发控制，可以使用快照读，而不会被阻塞。（什么是MVCC快照读？）
	
	
//5.5 说一下什么是偏向锁?（======================》待总结）	
	锁偏向是一种针对加锁操作的优化手段。它的核心思想是：如果一个线程获得了锁，那么锁就进入偏向模式。当这个线程再次请求锁时，无须再做任何同步操作。这样就节省了大量有关锁申请的操作，从而提高了程序性能。因此，对于几乎没有锁竞争的场合，偏向锁有比较好的优化效果，因为连续多次极有可能是同一个线程请求相同的锁。而对于锁竞争比较激烈的场合，其效果不佳。因为在竞争激烈的场合，最有可能的情况是每次都是不同的线程来请求相同的锁。这样偏向模式会失效，因此还不如不启用偏向锁

//6.redis缓存双写一致性场景，怎么解决？ 
	先更新数据库，再删除缓存。（三个线程，1更新mysql为10,删除缓存；线程2读取了10，但是还没更新到redis，线程3又更新了mysql为6并删除缓存，这时候线程2又冒出来执行了更新redis为10的操作。总结：更新比查询快导致的）===》增加了延迟删除策略，让更新数据库的线程睡几百毫秒，这样又大大降低了概率。
	另外三种为什么不行？	
	先更新数据库，再更新缓存。(不行，多线程下有风险，两个线程更新缓存的操作不知道谁先谁后)；
	先缓存，再数据库。不行，不好回滚且浪费计算资源；
	先删缓存，再更新数据库。不行一个删一个读后再更新可能造成不一致。
	
	单机版数据库采用上面第一种就可以了，但是我们mysql采用的是主从模式，读写分离。可能缓存已经删了，在主库binlog同步数据到从库的过程中断开了，从库还是旧的数据，这时候再请求
	会发现缓存为空，读取从库中的数据到缓存中，造成了mysql和缓存不一致的情况。
	我们采用的解决方式是：我们有一个订阅binlog的服务系统（阿里的中间件canal），订阅到的binlog是最新的，订阅到后直接把Redis的缓存给更新覆盖掉。
	
	
//7.说说sql优化方案？结合你自己的优化经历来说说。 ====》需解决
	1.加索引；2.尽量避免is null；3.覆盖索引; 4.小表驱动大表（待总结ok-->为了减少表连接次数）。 5.尽量少用in/not in,使用exist。
	经历：一分多钟优化到了一两秒。有多张表（合同头行、应收单、付款单、用户等）的关联。思路：1）explain看看哪些走了全表查询，把全表查询的都添加了对应的索引。2）改写了多个嵌套子查询；3）其中有一个数据量非常大的表的查询添加了覆盖索引，避免了回表的操作。4）去掉了一个下拉框的表的关联，改为在service层处理其映射关系。
	5）小表驱动大表
	
//8.服务实例和license是什么？合同绑定的是什么？kafka哪里用到了？ ====》需解决

	合同绑定服务实例，服务实例绑定license。一个合同可以绑定多个服务实例，一个服务实例可以有多个license。服务实例其实就是跟产品相关，有米级定位、亚米级定位、厘米级定位的服务产品，license相当于唯一凭证，license有对应的密钥。（有点像一个用户可以有多个账号，每个账号又有自己唯一的密码。）
	kafka用途：定时任务每天凌晨过3分钟发送站内信（快过期的通知消息）、经过算法处理后的轨道、钟差、偏码差等产品数据发送到kafka，然后系统进行消费处理数据。一类算法数据一个topic。 
	
//9.讲一下用户中心、产品中心、合同订单中心、服务中心、客服中心、鉴权中心（三元组：licenseKey、licenseSecret、SDK version）、报表中心、日志中心。  ====》需解决
	ok

//10.日志中心怎么做的？ ====》需解决
	日志中心记录了用户的请求记录，包括请求接口，请求时间，请求人，业务类型等。   通过拦截器实现，请求方法前，preHandle识别该注解，然后方法请求完后，将获取到的信息封装成一个对象并发送到kafka。
	
//11.讲一下什么是https，https安全在哪里？
	https为什么安全？ https的传输过程是怎样的？ 为什么需要证书？ 使用https会被抓包吗？ tcp三次握手、四次握手？为什么需要三次握手而不是两次握手？
	https：https://blog.csdn.net/yuanchangliang/article/details/107961991
	tcp三次握手四次分手：https://developer.aliyun.com/article/476698
	
//12.产品有哪几种？产品对用户的体现是什么？ ====》需解决
	产品有米级、亚米级、厘米级。用户购买并开通了服务实例后，SDK获取到licenseKey、licenseSecret、SDK这个三元组，可以对服务系统发起请求，这时服务端会进行一个鉴权措施，判断该用户是否有权限、是否过期，通过就开始接收数据。
 
//13.SDK是什么？ ====》需解决
	同上
	
//14.整个项目的数据流转是怎样的？ ====》需解决
	卫星数据--》算法数据--》编码处理 ---》播发 ---》接收最终的高精定位数据。 业务运营系统扮演了一个购买的服务系统+鉴权子中心。

//15.说说springMVC流程。【spring相关】
	C:前端控制器；M:业务模型(Controller及逻辑处理)；V:视图。将处理完的结果通过视图渲染之后返回给用户，JSP、Excel等。
	https://zhuanlan.zhihu.com/p/42602265

//16.mybatis二级缓存知道吗？项目上用了吗？【mybatis相关】
	知道。
	
//17.说说springCloud几大组件。【微服务相关】
	springCloud问题收集（（======================>待总结））,五大常用组件：
	1.Eureka：注册中心。
	2.Zuul：服务网关。
	3.feign:微服务之间的调用
	4.Ribbon:负载均衡
	5.Hystrix:服务熔断。
	
	
	项目上的：jenkis 持续部署,持续集成； Eureka 注册中心； fegin rpc框架，接口跨服务调用； Swagger 接口服务，可视化所有接口。

//18.有用到分布式锁吗？说说分布式锁的实现方式？【分布式解决方案】
	我们用的是redis分布式锁，Reddsion看门狗实现分布式锁。

//19.SpringBoot的启动注解了解吗？说说他的原理?【springBoot】
	扫描我们的配置文件和我们自定义的类。@SpringBootApplication = @EnableAutoConfiguration，@ComponentScan，@SpringBootConfiguration的组合

//20.mysql索引底层知道吗？聚簇索引和非聚簇有什么区别？为什么用B+树？【mysql】
	B+树。

//21.说说redis集群。分布式id问题，雪花算法。【redis】
	redis集群问题（待总结）

//22.说几个linux常用命令【运维命令，cpu飙升等】
	top，vmstat，pidstat。 cpu占用过高思路分析。

//23.jvm相关【jvm相关】
	1

//24.hashMap、ConcurrentHashMap、TreeMap、HashTable等集合【集合相关】
	1

//25.所有八股文能结合项目就结合项目。
	1

//26.说一个你做过的最自豪的项目，或是最近做过的一个项目。
	1

//27.说一个你解决过的最难的技术问题，或是最有技术含量的问题。
	待总结

//28.说一个你最痛苦的，或最艰难的项目。
	同上

//29.说一个你犯过的最大的技术错误，或是引发的技术故障。
	没有发生过什么大的。  要说大的，就是合并代码的时候有一次冲突把别人代码改了，冲突时最好应该要面对面问一下再合并好。

//30.你为什么要换工作？
	闲，不符合我的价值观。然后工资低。

//31.说一下你的缺点？
	技术栈技术广度还不够，在未来还要多学习。   不善于表达。

//32.对996你是怎么看的？
	可以

//33.你平时有什么运动？
	羽毛、乒乓、慢跑。

//34.平时看什么书？
	最近在看周志明老师的深入理解Java虚拟机。看到第四章，jvm监控工具，基本都浏览了一遍。打算有空还要二刷。
	并发编程和微服务也看过一些。程序员修炼指南

//35.=====》算法优先看数组部分，数组完成即可开始tou